// <auto-generated />
using System;
using CbeltRetake.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CbeltRetake.Migrations
{
    [DbContext(typeof(IdeaContext))]
    [Migration("20181218192712_newmodelsforlikesandideas")]
    partial class newmodelsforlikesandideas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CbeltRetake.Models.Idea", b =>
                {
                    b.Property<int>("ideaid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<int?>("myuseruserid");

                    b.HasKey("ideaid");

                    b.HasIndex("myuseruserid");

                    b.ToTable("Ideas");
                });

            modelBuilder.Entity("CbeltRetake.Models.Like", b =>
                {
                    b.Property<int>("likeid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ideaid");

                    b.Property<int>("userid");

                    b.HasKey("likeid");

                    b.HasIndex("ideaid");

                    b.HasIndex("userid");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("CbeltRetake.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("firstname")
                        .IsRequired();

                    b.Property<string>("lastname")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired();

                    b.HasKey("userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CbeltRetake.Models.Idea", b =>
                {
                    b.HasOne("CbeltRetake.Models.User", "myuser")
                        .WithMany()
                        .HasForeignKey("myuseruserid");
                });

            modelBuilder.Entity("CbeltRetake.Models.Like", b =>
                {
                    b.HasOne("CbeltRetake.Models.Idea", "idea")
                        .WithMany("likes")
                        .HasForeignKey("ideaid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CbeltRetake.Models.User", "user")
                        .WithMany("likes")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
